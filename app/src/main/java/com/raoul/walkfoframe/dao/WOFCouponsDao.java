package com.raoul.walkfoframe.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.raoul.walkfoframe.model.WOFCoupons;
import com.raoul.walkfoframe.database.DaoSession;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table WOFCOUPONS.
*/
public class WOFCouponsDao extends AbstractDao<WOFCoupons, Void> {

    public static final String TABLENAME = "WOFCOUPONS";

    /**
     * Properties of entity WOFCoupons.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property CouponID = new Property(0, Integer.class, "couponID", false, "COUPON_ID");
        public final static Property VenueLongitude = new Property(1, Double.class, "venueLongitude", false, "VENUE_LONGITUDE");
        public final static Property VenueLatitude = new Property(2, Double.class, "venueLatitude", false, "VENUE_LATITUDE");
        public final static Property SpecialDescription = new Property(3, String.class, "specialDescription", false, "SPECIAL_DESCRIPTION");
        public final static Property SpecialMessage = new Property(4, String.class, "specialMessage", false, "SPECIAL_MESSAGE");
        public final static Property SpecialProvider = new Property(5, String.class, "specialProvider", false, "SPECIAL_PROVIDER");
        public final static Property SpecialRedemption = new Property(6, String.class, "specialRedemption", false, "SPECIAL_REDEMPTION");
        public final static Property SpecialTitle = new Property(7, String.class, "specialTitle", false, "SPECIAL_TITLE");
        public final static Property SpecialVenueID = new Property(8, String.class, "specialVenueID", false, "SPECIAL_VENUE_ID");
        public final static Property SpecialType = new Property(9, String.class, "specialType", false, "SPECIAL_TYPE");
        public final static Property VenueName = new Property(10, String.class, "venueName", false, "VENUE_NAME");
        public final static Property SpecialAddress = new Property(11, String.class, "specialAddress", false, "SPECIAL_ADDRESS");
    };


    public WOFCouponsDao(DaoConfig config) {
        super(config);
    }
    
    public WOFCouponsDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'WOFCOUPONS' (" + //
                "'COUPON_ID' INTEGER," + // 0: couponID
                "'VENUE_LONGITUDE' REAL," + // 1: venueLongitude
                "'VENUE_LATITUDE' REAL," + // 2: venueLatitude
                "'SPECIAL_DESCRIPTION' TEXT," + // 3: specialDescription
                "'SPECIAL_MESSAGE' TEXT," + // 4: specialMessage
                "'SPECIAL_PROVIDER' TEXT," + // 5: specialProvider
                "'SPECIAL_REDEMPTION' TEXT," + // 6: specialRedemption
                "'SPECIAL_TITLE' TEXT," + // 7: specialTitle
                "'SPECIAL_VENUE_ID' TEXT," + // 8: specialVenueID
                "'SPECIAL_TYPE' TEXT," + // 9: specialType
                "'VENUE_NAME' TEXT," + // 10: venueName
                "'SPECIAL_ADDRESS' TEXT);"); // 11: specialAddress
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'WOFCOUPONS'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, WOFCoupons entity) {
        stmt.clearBindings();
 
        Integer couponID = entity.getCouponID();
        if (couponID != null) {
            stmt.bindLong(1, couponID);
        }
 
        Double venueLongitude = entity.getVenueLongitude();
        if (venueLongitude != null) {
            stmt.bindDouble(2, venueLongitude);
        }
 
        Double venueLatitude = entity.getVenueLatitude();
        if (venueLatitude != null) {
            stmt.bindDouble(3, venueLatitude);
        }
 
        String specialDescription = entity.getSpecialDescription();
        if (specialDescription != null) {
            stmt.bindString(4, specialDescription);
        }
 
        String specialMessage = entity.getSpecialMessage();
        if (specialMessage != null) {
            stmt.bindString(5, specialMessage);
        }
 
        String specialProvider = entity.getSpecialProvider();
        if (specialProvider != null) {
            stmt.bindString(6, specialProvider);
        }
 
        String specialRedemption = entity.getSpecialRedemption();
        if (specialRedemption != null) {
            stmt.bindString(7, specialRedemption);
        }
 
        String specialTitle = entity.getSpecialTitle();
        if (specialTitle != null) {
            stmt.bindString(8, specialTitle);
        }
 
        String specialVenueID = entity.getSpecialVenueID();
        if (specialVenueID != null) {
            stmt.bindString(9, specialVenueID);
        }
 
        String specialType = entity.getSpecialType();
        if (specialType != null) {
            stmt.bindString(10, specialType);
        }
 
        String venueName = entity.getVenueName();
        if (venueName != null) {
            stmt.bindString(11, venueName);
        }
 
        String specialAddress = entity.getSpecialAddress();
        if (specialAddress != null) {
            stmt.bindString(12, specialAddress);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public WOFCoupons readEntity(Cursor cursor, int offset) {
        /*WOFCoupons entity = new WOFCoupons( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // couponID
            cursor.isNull(offset + 1) ? null : cursor.getDouble(offset + 1), // venueLongitude
            cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2), // venueLatitude
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // specialDescription
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // specialMessage
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // specialProvider
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // specialRedemption
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // specialTitle
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // specialVenueID
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // specialType
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // venueName
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11) // specialAddress
        );*/
    	
        return null;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, WOFCoupons entity, int offset) {
        entity.setCouponID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setVenueLongitude(cursor.isNull(offset + 1) ? null : cursor.getDouble(offset + 1));
        entity.setVenueLatitude(cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2));
        entity.setSpecialDescription(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSpecialMessage(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setSpecialProvider(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setSpecialRedemption(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setSpecialTitle(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setSpecialVenueID(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setSpecialType(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setVenueName(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setSpecialAddress(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(WOFCoupons entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(WOFCoupons entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
